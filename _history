{"entries":[{"timestamp":1727608006277,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"blocksprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":234,"start2":234,"length1":36,"length2":31}]}]},{"timestamp":1727608009287,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":249,"start2":249,"length1":17,"length2":21}]}]},{"timestamp":1727610585609,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"lone"],[-1,"2"],[0,"\",\n "]],"start1":21,"start2":21,"length1":9,"length2":8}]}]},{"timestamp":1727610644564,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"^oJ0oe1YPZcI--{uqVsB\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"g}U4xU~Uu%^fS;[*;D+`\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"nexusClone.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\""],[0,"\n   "]],"start1":222,"start2":222,"length1":77,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"nexusClone.ts","value":"/**\n* MakeCode extension for micro:bit expansion board \"Nexus:bit\" and robot \"NexusBot\" from Taiwan Coding Education Association (TCEA)\n* By Alan Wang, 2019\n*/\n\nenum boardType {\n    //% block=\"Nexus:bit\"\n    nexusbit,\n    //% block=\"Thunder:bit V2\"\n    thunderbit_v2,\n    //% block=\"Thunder:bit V1\"\n    thunderbit_v1,\n}\n\n\nenum servoDir {\n    //% block=\"min\"\n    min,\n    //% block=\"max\"\n    max,\n}\n\n\nlet _boardType: boardType = boardType.nexusbit\n\n//% weight=200 color=#009fb7 icon=\"\\uf1aa\" block=\"NexusClone\"\nnamespace nexusClone {\n\n    let _servoNum = 12\n    let _rLedPin = 15\n    let _gLedPin = 14\n    let _bLedPin = 13\n    let _boardName = \"Nexus:bit\"\n    let _initialized = false\n    let _servoDefl = [90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90]\n    let _servoCurrent = [90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90]\n    let _servoMin = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    let _servoMax = [180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180]\n    let _servoDelta = [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]\n\n    function _initialize() {\n        if (!_initialized) {\n            PCA9685.reset(106)\n            _initialized = true\n        }\n    }\n\n    //% block=\"Select board type %type\" group=\"1. Setup\"\n    export function selectBoard(type: boardType) {\n        _boardType = type\n        if (_boardType == boardType.nexusbit) {\n            _boardName = \"Nexus:bit\"\n            _servoNum = 12\n            _rLedPin = 15\n            _gLedPin = 14\n            _bLedPin = 13\n        } else {\n            _boardName = \"Thunder:bit \"\n            _boardName += (_boardType == boardType.thunderbit_v2) ? \"V2\" : \"V1\"\n            _servoNum = (_boardType == boardType.thunderbit_v2) ? 8 : 4\n            _rLedPin = 9\n            _gLedPin = 10\n            _bLedPin = 11\n        }\n    }\n\n    //% block=\"Board information (see serial output)\" group=\"1. Setup\" advanced=true\n    export function info() {\n        serial.writeLine(\"Nexus:bit/Thunder:bit/NexusBot are products of Taiwan Coding Education Association (TCEA) (www.beyond-coding.org.tw)\")\n        serial.writeLine(\"Extension by Alan Wang, 2019. (github.com/alankrantas/pxt-Nexusbit)\")\n        serial.writeLine(\"Current selected board: \" + _boardName)\n        serial.writeLine(\"PCA9685 servo num: \" + _servoNum)\n    }\n\n    //% block=\"Configure PCA9685 servo no. %servo|default degree(s) = %deflDegree|min degree(s) = %minDegree|max degree(s) = %maxDegree|gradually turning degree(s) = %delta\" servo.min=1 servo.max=12 servo.defl=1 deflDegree.shadow=\"protractorPicker\" deflDegree.defl=90 minDegree.shadow=\"protractorPicker\" minDegree.defl=0 maxDegree.shadow=\"protractorPicker\" maxDegree.defl=180 delta.shadow=\"protractorPicker\" delta.defl=5 group=\"4. PCA9685 Servos\" advanced=true\n    export function servoConfig(servo: number, deflDegree: number, minDegree: number, maxDegree: number, delta: number) {\n        if (servo > 0 && servo <= _servoNum) {\n            _servoMin[servo - 1] = Math.constrain(minDegree, 0, 180)\n            _servoMax[servo - 1] = (Math.constrain(maxDegree, 0, 180) >= minDegree) ? Math.constrain(maxDegree, 0, 180) : _servoMin[servo - 1]\n            _servoDefl[servo - 1] = Math.constrain(deflDegree, _servoMin[servo - 1], _servoMax[servo - 1])\n            _servoDelta[servo - 1] = Math.constrain(delta, 0, 180)\n        }\n    }\n\n    //% block=\"Adjust PCA9685 servos default position|by array %deflDegrees\" group=\"4. PCA9685 Servos\" blockExternalInputs=true advanced=true\n    export function servosDeflAdjust(deflDegrees: number[]) {\n        if (deflDegrees != null && deflDegrees.length <= _servoNum)\n            for (let i = 0; i < deflDegrees.length; i++) _servoDefl[i] = Math.constrain(_servoDefl[i] + deflDegrees[i], _servoMin[i], _servoMax[i])\n    }\n\n    //% block=\"Set PCA9685 servos greadually turing degree(s)|by array %deltas\" group=\"4. PCA9685 Servos\" blockExternalInputs=true advanced=true\n    export function servoSetDelta(deltas: number[]) {\n        if (deltas != null && deltas.length <= _servoNum)\n            for (let i = 0; i < deltas.length; i++) if (deltas[i] != null && deltas[i] > 0) _servoDelta[i] = Math.constrain(deltas[i], 0, 180)\n    }\n\n    //% block=\"PCA9685 servo no. %servo turn to %degree degree(s)\" servo.min=1 servo.max=12 servo.defl=1 degree.shadow=\"protractorPicker\" degree.defl=180 group=\"4. PCA9685 Servos\"\n    export function servoTo(servo: number, degree: number) {\n        _initialize()\n        degree = Math.constrain(degree, _servoMin[servo - 1], _servoMax[servo - 1])\n        if (servo > 0 && servo <= _servoNum) {\n            _servoCurrent[servo - 1] = degree\n            PCA9685.setServoPosition(servo, degree, 64)\n        }\n    }\n\n    //% block=\"Get PCA9685 servo no. %servo current position\" servo.min=1 servo.max=12 servo.defl=1 deltaArray.min=0 deltaArray.max=180 deltaArray.defl=5 group=\"4. PCA9685 Servos\" advanced=true\n    export function getServoCurrent(servo: number): number {\n        return (servo > 0 && servo <= _servoNum) ? _servoCurrent[servo - 1] : 0\n    }\n\n    //% block=\"PCA9685 servo no. %servo turn to %direction degree(s)\" servo.min=1 servo.max=12 servo.defl=1 group=\"4. PCA9685 Servos\"\n    export function servoToMinMax(servo: number, direction: servoDir) {\n        servoTo(servo, direction == servoDir.min ? _servoMin[servo - 1] : _servoMax[servo - 1])\n    }\n\n    //% block=\"PCA9685 servo no. %servo move %delta degree(s) from default\" servo.min=1 servo.max=12 servo.defl=1 delta.min=-180 delta.max=180 delta.defl=0 group=\"4. PCA9685 Servos\"\n    export function servoDeltaFromDefl(servo: number, delta: number) {\n        servoTo(servo, _servoDefl[servo - 1] + delta)\n    }\n\n    //% block=\"PCA9685 servo no. %servo gradually turn toward %degree degree(s)\" servo.min=1 servo.max=12 servo.defl=1 degree.shadow=\"protractorPicker\" degree.defl=90 group=\"4. PCA9685 Servos\" advanced=true\n    export function servoSlowTurn(servo: number, degree: number) {\n        degree = Math.constrain(degree, _servoMin[servo - 1], _servoMax[servo - 1])\n        let newDegree = _servoCurrent[servo - 1]\n        if (Math.abs(degree - _servoCurrent[servo - 1]) > 0 && Math.abs(degree - _servoCurrent[servo - 1]) <= _servoDelta[servo - 1]) {\n            servoTo(servo, degree)\n        } else {\n            if (degree > _servoCurrent[servo - 1]) newDegree = _servoCurrent[servo - 1] + _servoDelta[servo - 1]\n            else if (degree < _servoCurrent[servo - 1]) newDegree = _servoCurrent[servo - 1] - _servoDelta[servo - 1]\n            servoTo(servo, newDegree)\n        }\n    }\n\n    //% block=\"PCA9685 servo no. %servo at %degree degree(s) %check ?\" servo.min=1 servo.max=12 servo.defl=1 degree.shadow=\"protractorPicker\" degree.defl=90 group=\"4. PCA9685 Servos\" advanced=true\n    export function ServoIsAtDegree(servo: number, degree: number, check: boolean) {\n        if (servo > 0 && servo <= _servoNum) return check ? getServoCurrent(servo) == degree : !(getServoCurrent(servo) == degree)\n        else return false\n    }\n\n    //% block=\"PCA9685 servo no. %servo gradually turn toward %direction degree(s)\" servo.min=1 servo.max=12 servo.defl=1 group=\"4. PCA9685 Servos\" advanced=true\n    export function servoSlowTurnMinMax(servo: number, direction: servoDir) {\n        servoSlowTurn(servo, direction == servoDir.min ? _servoMin[servo - 1] : _servoMax[servo - 1])\n    }\n\n    //% block=\"PCA9685 servo no. %servo at %direction degree(s) %check ?\" servo.min=1 servo.max=12 servo.defl=1 group=\"4. PCA9685 Servos\" advanced=true\n    export function ServoIsAtMinMax(servo: number, direction: servoDir, check: boolean) {\n        return ServoIsAtDegree(servo, direction == servoDir.min ? _servoMin[servo - 1] : _servoMax[servo - 1], check)\n    }\n\n    //% block=\"PCA9685 servo no. %servo gradually move %delta degree(s) from default\" servo.min=1 servo.max=12 servo.defl=1 delta.min=-180 delta.max=180 delta.defl=0 group=\"4. PCA9685 Servos\" advanced=true\n    export function servoSlowTurnDeltaFromDefl(servo: number, delta: number) {\n        let target = Math.constrain(_servoDefl[servo - 1] + delta, _servoMin[servo - 1], _servoMax[servo - 1])\n        let newDegree = _servoCurrent[servo - 1]\n        if (Math.abs(target - newDegree) > 0 && Math.abs(target - newDegree) <= _servoDelta[servo - 1]) {\n            servoTo(servo, target)\n        } else {\n            if (target > _servoCurrent[servo - 1]) newDegree = _servoCurrent[servo - 1] + _servoDelta[servo - 1]\n            else if (target < _servoCurrent[servo - 1]) newDegree = _servoCurrent[servo - 1] - _servoDelta[servo - 1]\n            servoTo(servo, newDegree)\n        }\n    }\n\n    //% block=\"PCA9685 servo no. %servo at degree(s) %delta from default %check ?\" servo.min=1 servo.max=12 servo.defl=1 delta.min=-180 delta.max=180 delta.defl=0 group=\"4. PCA9685 Servos\" advanced=true\n    export function servoIsDeltaFromDefl(servo: number, delta: number, check: boolean) {\n        return ServoIsAtDegree(servo, _servoDefl[servo - 1] + delta, check)\n    }\n\n    //% block=\"PCA9685 all servos gradually move from default|by array %deltas|turning delay (ms) = %delay\" group=\"4. PCA9685 Servos\" blockExternalInputs=true advanced=true\n    export function servosSlowTurnDeltaFromDefl(deltas: number[], delay: number) {\n        let check = true\n        if (delay < 0) delay = 0\n        if (deltas != null && deltas.length <= _servoNum) {\n            while (true) {\n                check = true\n                for (let i = 0; i < deltas.length; i++) {\n                    if (deltas[i] != null) {\n                        if (servoIsDeltaFromDefl(i + 1, deltas[i], false)) {\n                            servoSlowTurnDeltaFromDefl(i + 1, deltas[i])\n                            if (check) check = false\n                        }\n                    }\n                }\n                if (check) break\n                if (delay > 0) basic.pause(delay)\n            }\n        }\n    }\n\n    //% block=\"PCA9685 all servos gradually move %delta from default if not done\" group=\"4. PCA9685 Servos\" advanced=true\n    export function servoSlowTurnDeltaFromDeflAndCheck(delta: number[]): boolean {\n        let check = true\n        if (delta != null && delta.length <= _servoNum) {\n            for (let i = 0; i < delta.length; i++) {\n                if (servoIsDeltaFromDefl(i + 1, delta[i], false)) {\n                    servoSlowTurnDeltaFromDefl(i + 1, delta[i])\n                    if (check) check = false\n                }\n            }\n        }\n        return !check\n    }\n\n    //% block=\"All PCA9685 servos turn to default\" group=\"4. PCA9685 Servos\"\n    export function servosToDefl() {\n        for (let i = 0; i < _servoNum; i++)\n            servoTo(i + 1, _servoDefl[i])\n    }\n\n    //% block=\"All PCA9685 servos turn to degrees %degree\" group=\"4. PCA9685 Servos\"\n    export function servosToDegree(degrees: number[]) {\n        if (degrees != null && degrees.length <= _servoNum)\n            for (let i = 0; i < degrees.length; i++)\n                if (degrees[i] != null)\n                    servoTo(i + 1, degrees[i])\n    }\n\n    //% block=\"All PCA9685 servos move to degrees %deltas from default\" group=\"4. PCA9685 Servos\" blockExternalInputs=true\n    export function servosToDeltaFromDefl(deltas: number[]) {\n        if (deltas != null && deltas.length <= _servoNum)\n            for (let i = 0; i < deltas.length; i++)\n                if (deltas[i] != null)\n                    servoTo(i + 1, _servoDefl[i] + deltas[i])\n    }\n\n    //% block=\"(null)\" group=\"4. PCA9685 Servos\" advanced=true\n    export function return_null(): number {\n        return null\n    }\n\n\n    //% weight=15\n    namespace PCA9685 {\n    }\n\n}"}]}],"snapshots":[{"timestamp":1727608006276,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"NexusClone\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1727610585609,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","pxt.json":"{\n    \"name\": \"NexusClone\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}}],"shares":[],"lastSaveTime":1727610923356}